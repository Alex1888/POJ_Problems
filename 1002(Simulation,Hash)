import java.io.*;
import java.util.*;
import java.util.ArrayList.*;


public class Main {
	
	static int partion(String[] array, int p, int r) {
		String x = array[r];
		int i = p - 1;//注意这点，把i设成负值，然后作为移动的标志
		int j;
		for (j = p; j < r; j++) {
		if (array[j].compareTo(x) < 0) {
		i++;
		String temp = array[j];
		array[j] = array[i];
		array[i] = temp;
		}
		}
		String temp = array[j];
		array[j] = array[i + 1];
		array[i + 1] = temp;
		return i+1;//返回的应该是交换后的哨兵的位置
		}
		//递归解决每个划分后的小数组
		static void quickSort(String[] array, int p, int r) {
		if (p < r) {
		int q = partion(array, p, r);
		quickSort(array, p, q - 1);
		quickSort(array, q + 1, r);
		}
		}
	
	public static String toNorm(String s){
		String res = "";
		for(int i = 0; i < s.length(); i++){
			char c = s.charAt(i);
			if('0' <= c && c <= '9'){
				res += c;
			}
			if('A' <= c && c <= 'C'){
				res += '2';
			}
			if('D' <= c && c <= 'F'){
				res += '3';
			}
			if('G' <= c && c <= 'I'){
				res += '4';
			}
			if('J' <= c && c <= 'L'){
				res += '5';
			}
			if('M' <= c && c <= 'O'){
				res += '6';
			}
			if('P' <= c && c <= 'S'){
				res += '7';
			}
			if('T' <= c && c <= 'V'){
				res += '8';
			}
			if('W' <= c && c <= 'Z'){
				res += '9';
			}
		}
		return res;
	}
	
	public static String output(String s){
		return s.substring(0, 3) + '-' + s.substring(3, 7);
	}
	
	public static int mod = 23333;
	
	public static int eval(String s){
		return Integer.parseInt(s)%mod;
	}
	
	public static void main(String args[]) throws Exception
    {
		
		Scanner cin=new Scanner(System.in);
		int a = cin.nextInt();
		ArrayList<ArrayList<String>> aas = new ArrayList<ArrayList<String>>();
		for(int i = 0; i < mod; i++){
			aas.add(new ArrayList<String>());
		}
		
		for(int i = 0; i < a; i++){
			String temp = cin.next();
			String tempN = toNorm(temp);
			int eval = eval(tempN);
			aas.get(eval).add(tempN);
		}
		
		ArrayList<String> res = new ArrayList<String>();
		
		for(int i = 0; i < mod; i++){
			ArrayList<String> thisAl = aas.get(i);
			int num = thisAl.size();
			int[] state = new int[num];
			for(int i1 = 0; i1 < num; i1 ++) state[i1] = 1;
			for(int i1 = 0; i1 < num-1; i1++){
				if(state[i1] == 0) continue;
				for(int j = i1+1; j < num; j++){
					if(thisAl.get(j).equals(thisAl.get(i1))){
						state[j] = 0;
						state[i1]++;
					}
					
				}
				if(state[i1]>1){
					res.add(output(thisAl.get(i1)) + " " + state[i1]);
				}
			}
		}
		if(res.size() == 0){
			System.out.println("No duplicates. ");
		}
		else{
		//res.sort(null);
			String[] array = (String[])res.toArray(new String[res.size()]);   
			quickSort(array, 0, array.length - 1);
			for(int i = 0; i < res.size(); i++){
				System.out.println(array[i]);
			}
		}
    }

}
