#include <iostream>
#include <queue>

using namespace std;

int adj[21][21];
int adjNo[21];

int main() {
	int cnt = 0;
	while(cin >> adjNo[1]){
		cnt++;
		cout << "Test Set #" << cnt << endl;
		for(int i = 2; i <= 20; i++){
			adjNo[i] = 0;
		}
		for(int i = 1; i < 20; i++){
			int gs;
			if(i != 1) {

				cin >> gs;
			}
			else{
				gs = adjNo[1];
				adjNo[1] = 0;
			}
			for(int j = 0; j < gs; j++){
				int tmp;
				cin >> tmp;
				adj[i][adjNo[i]] = tmp;
				adj[tmp][adjNo[tmp]] = i;
				adjNo[i]++;
				adjNo[tmp]++;
			}
		}
		int dist[21][21];
		bool jsed[21] = {0};
		int n;
		cin >> n;
		for(int i = 0; i < n; i++){
			int a,b;
			cin >> a >> b;
			cout << a << " to " << b << ": ";
			if(a>b){
				int tmp = b;
				b = a;
				a = tmp;
			}
			if(jsed[a]){
				cout << dist[a][b] << endl;
			}
			else if(jsed[b]){
				cout << dist[b][a] << endl;
			}
			else{
				jsed[a] = 1;
				queue<int> bfs;
				bool used[21] = {0};
				used[a] = 1;
				dist[a][a] = 0;
				bfs.push(a);
				while(!bfs.empty()){
					int d = bfs.front();
					bfs.pop();
					for(int j = 0; j < adjNo[d]; j++){
						if(!used[adj[d][j]]){
							dist[a][adj[d][j]] = dist[a][d] + 1;
							used[adj[d][j]] = 1;
							bfs.push(adj[d][j]);
						}
					}
				}
				cout << dist[a][b] << endl;
			}
		}
		cout << endl;
	}
	return 0;
}
