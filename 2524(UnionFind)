#include <iostream>
#include <stdio.h>
#include <vector>
using namespace std;

int *rep, *rnk;

void init(int n){
	for(int i = 1; i <= n; i++){
		rep[i] = i;
		rnk[i] = 0;
	}
}

int Find(int ele){
	vector<int> path;
	while(rep[ele] != ele){
		path.push_back(ele);
		ele = rep[ele];
	}
	int sz = path.size();
	for(int i = 0; i < sz; i++){
		rep[path[i]] = ele;
	}
	return ele;
}

void Union(int r1, int r2){
	if(rnk[r1] < rnk[r2]){
		rep[r1] = r2;
	}
	else if(rnk[r1] > rnk[r2]){
		rep[r2] = r1;
	}
	else{
		rep[r1] = r2;
		rnk[r2]++;
	}
}

int main() {
	int cnt = 0;
	while(1){
		int n,m;
		scanf("%d%d", &n,&m);
		if(!n && !m) break;
		cnt++;
		//cout << cnt << endl;
		printf("Case %d: ", cnt);
		rep = new int[n+1];
		rnk = new int[n+1];

		init(n);
		int rel = n;
		for(int i = 0; i < m; i++){
			//cout << i << endl;
			int t1, t2;
			scanf("%d%d", &t1, &t2);
			int r1 = Find(t1), r2 = Find(t2);
			Union(r1,r2);
			//cout << r1 << r2 << endl;
			if(r1 != r2) rel--;
		}

		printf("%d\n", rel);

		delete [] rep;
		delete [] rnk;
	}
	return 0;
}
